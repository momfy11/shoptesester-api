{
	"info": {
		"_postman_id": "45ada80e-432a-43d8-b14a-eac988c3bf2f",
		"name": "API-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43554793",
		"_collection_link": "https://srecko-241658.postman.co/workspace/Srecko's-Workspace~4e65a9b8-1915-48c5-87be-af54251289b3/collection/43554793-45ada80e-432a-43d8-b14a-eac988c3bf2f?action=share&source=collection_link&creator=43554793"
	},
	"item": [
		{
			"name": "GetAllProducts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"statuskod 200 = OK\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Has array\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    var firstId = jsonData.some(function(item){\r",
							"        return item.id === 1;\r",
							"\r",
							"    });pm.expect(firstId).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllCategories",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statuskod 200 = OK\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Has array\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    var firstId = jsonData.some(function(item){\r",
							"        return item.id === 1;\r",
							"\r",
							"    });pm.expect(firstId).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/categories",
					"host": [
						"{{URL}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetProductOne",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statuskod 200 = OK\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Is correct id\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1); \r",
							"    \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/products/1",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(\"Svar fr√•n API:\", jsonData);\r",
							"pm.test(\"Statuskod 200 = OK\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"   \r",
							"});\r",
							"\r",
							"pm.test(\"Is Admin\", function(){\r",
							"     pm.expect(jsonData.role).to.eql(\"admin\");\r",
							"});\r",
							"\r",
							"if(jsonData.token){\r",
							"    pm.environment.set(\"auth_token\", jsonData.token)\r",
							"};"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Email\":\"admin@admin.com\",\r\n    \"Password\":\"admin123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddCategory",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if(pm.environment.get(\"auth_token\")){\r",
							"    pm.request.headers.upsert({\r",
							"        key: \"Authorization\",\r",
							"        value: \"Bearer\" + pm.environment.get(\"auth_token\")\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statuskod 200 = Created\", function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Fikus\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/categories",
					"host": [
						"{{URL}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllCategories Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statuskod 200 = OK\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Has array\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    var firstId = jsonData.some(function(item){\r",
							"        return item.id === 1;\r",
							"\r",
							"    });pm.expect(firstId).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/categories",
					"host": [
						"{{URL}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"statuscode 200 for OK or 409 for item allready exists\", function(){\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,409]);\r",
							"})\r",
							"\r",
							"if(pm.response.code === 200){\r",
							"    console.log(\"Item created succesfully\");\r",
							"}else if(pm.response.code === 409){\r",
							"    console.log(\"No item added,Item allrdy exists\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Name\":\"Blowup Barbie\",\r\n    \"Price\":\"399\",\r\n    \"CategoryId\":\"6\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateProductAgain",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"statuscode 200 for OK or 409 for item allready exists\", function(){\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,409]);\r",
							"})\r",
							"\r",
							"if(pm.response.code === 200){\r",
							"    console.log(\"Item created succesfully\");\r",
							"}else if(pm.response.code === 409){\r",
							"    console.log(\"No item added,Item allrdy exists\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Name\":\"Blowup Barbie\",\r\n    \"Price\":\"399\",\r\n    \"CategoryId\":\"6\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"statuskod 200 = OK\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Has array\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    var firstId = jsonData.some(function(item){\r",
							"        return item.id === 1;\r",
							"\r",
							"    });pm.expect(firstId).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statuscode 200\", function(){\r",
							"    pm.response.to.have.status(200); \r",
							"\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Price\":\"300\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/products/1",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetProductOne Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statuskod 200 = OK\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Is correct id\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1); \r",
							"    \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/products/1",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/products/4",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllProduct Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"statuskod 200 = OK\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Has array\",function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    var firstId = jsonData.some(function(item){\r",
							"        return item.id === 1;\r",
							"\r",
							"    });pm.expect(firstId).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/products",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"statuscode 200 = ok (Logged out succesfully)\",function(){\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/login",
					"host": [
						"{{URL}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000/api/",
			"type": "string"
		}
	]
}